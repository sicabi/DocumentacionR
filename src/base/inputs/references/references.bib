
@online{narasimhan_nvidia_2022,
	title = {{NVIDIA}, Arm, and Intel Publish {FP}8 Specification for Standardization as an Interchange Format for {AI}},
	url = {https://developer.nvidia.com/blog/nvidia-arm-and-intel-publish-fp8-specification-for-standardization-as-an-interchange-format-for-ai/},
	abstract = {{NVIDIA}, Arm, and Intel jointly propose a {FP}8 format for standardization as an interchange format for {AI} and improve computational efficiency.},
	titleaddon = {{NVIDIA} Technical Blog},
	author = {Narasimhan, Shar},
	urldate = {2025-04-29},
	date = {2022-09-14},
	langid = {american},
	file = {Snapshot:/home/sicabi/Zotero/storage/F8LJ2KMF/nvidia-arm-and-intel-publish-fp8-specification-for-standardization-as-an-interchange-format-for.html:text/html},
}

@misc{rouhani_microscaling_2023,
	title = {Microscaling Data Formats for Deep Learning},
	url = {http://arxiv.org/abs/2310.10537},
	doi = {10.48550/arXiv.2310.10537},
	abstract = {Narrow bit-width data formats are key to reducing the computational and storage costs of modern deep learning applications. This paper evaluates Microscaling ({MX}) data formats that combine a per-block scaling factor with narrow floating-point and integer types for individual elements. {MX} formats balance the competing needs of hardware efficiency, model accuracy, and user friction. Empirical results on over two dozen benchmarks demonstrate practicality of {MX} data formats as a drop-in replacement for baseline {FP}32 for {AI} inference and training with low user friction. We also show the first instance of training generative language models at sub-8-bit weights, activations, and gradients with minimal accuracy loss and no modifications to the training recipe.},
	number = {{arXiv}:2310.10537},
	publisher = {{arXiv}},
	author = {Rouhani, Bita Darvish and Zhao, Ritchie and More, Ankit and Hall, Mathew and Khodamoradi, Alireza and Deng, Summer and Choudhary, Dhruv and Cornea, Marius and Dellinger, Eric and Denolf, Kristof and Dusan, Stosic and Elango, Venmugil and Golub, Maximilian and Heinecke, Alexander and James-Roxby, Phil and Jani, Dharmesh and Kolhe, Gaurav and Langhammer, Martin and Li, Ada and Melnick, Levi and Mesmakhosroshahi, Maral and Rodriguez, Andres and Schulte, Michael and Shafipour, Rasoul and Shao, Lei and Siu, Michael and Dubey, Pradeep and Micikevicius, Paulius and Naumov, Maxim and Verrilli, Colin and Wittig, Ralph and Burger, Doug and Chung, Eric},
	urldate = {2025-04-29},
	date = {2023-10-19},
	eprinttype = {arxiv},
	eprint = {2310.10537 [cs]},
	keywords = {Computer Science - Artificial Intelligence, Computer Science - Machine Learning},
	file = {Preprint PDF:/home/sicabi/Zotero/storage/CG9XQVY8/Rouhani et al. - 2023 - Microscaling Data Formats for Deep Learning.pdf:application/pdf;Snapshot:/home/sicabi/Zotero/storage/26BFTX2G/2310.html:text/html},
}

@online{cook_anatomy_2009,
	title = {Anatomy of a floating point number},
	url = {https://www.johndcook.com/blog/2009/04/06/anatomy-of-a-floating-point-number/},
	abstract = {How the bits of a floating point number are organized, how (de)normalization works, etc.},
	titleaddon = {John D. Cook Consulting},
	author = {Cook, John D.},
	urldate = {2024-09-26},
	date = {2009-04-06},
	langid = {american},
	file = {Snapshot:/home/sicabi/Zotero/storage/MPN7U2WX/anatomy-of-a-floating-point-number.html:text/html},
}

@online{wang_bfloat16_2019,
	title = {{BFloat}16: The secret to high performance on Cloud {TPUs}},
	url = {https://cloud.google.com/blog/products/ai-machine-learning/bfloat16-the-secret-to-high-performance-on-cloud-tpus},
	shorttitle = {{BFloat}16},
	abstract = {How the high performance of Google Cloud {TPUs} is driven by Brain Floating Point Format, or bfloat16},
	titleaddon = {Google Cloud Blog},
	author = {Wang, Shibo and Kanwar, Pankaj},
	urldate = {2024-07-07},
	date = {2019-08-24},
	langid = {english},
	file = {Snapshot:/home/sicabi/Zotero/storage/WXAFBRVL/bfloat16-the-secret-to-high-performance-on-cloud-tpus.html:text/html},
}

@online{kharya_nvidia_2020,
	title = {{NVIDIA} Blogs: {TensorFloat}-32 Accelerates {AI} Training {HPC} upto 20x},
	url = {https://blogs.nvidia.com/blog/tensorfloat-32-precision-format/},
	shorttitle = {{NVIDIA} Blogs},
	abstract = {{NVIDIA}'s Ampere architecture with {TF}32 speeds single-precision work, maintaining accuracy and using no new code.},
	titleaddon = {{NVIDIA} Blog},
	author = {Kharya, Paresh},
	urldate = {2024-07-07},
	date = {2020-05-14},
	langid = {american},
	file = {Snapshot:/home/sicabi/Zotero/storage/S2E5VBFX/tensorfloat-32-precision-format.html:text/html},
}

@online{gupta_whats_2019,
	title = {Whatâ€™s the Difference Between Single-, Double-, Multi- and Mixed-Precision Computing?},
	url = {https://blogs.nvidia.com/blog/whats-the-difference-between-single-double-multi-and-mixed-precision-computing/},
	abstract = {In double-precision format, each number takes up 64 bits. Single-precision format uses 32 bits, while half-precision is just 16 bits. Multi-precision computing uses processors capable of calculating at different precisions.},
	titleaddon = {{NVIDIA} Blog},
	author = {Gupta, Geetika},
	urldate = {2024-07-07},
	date = {2019-11-15},
	langid = {american},
	file = {Snapshot:/home/sicabi/Zotero/storage/APV9E7XE/whats-the-difference-between-single-double-multi-and-mixed-precision-computing.html:text/html},
}

@misc{yates_fixed-point_2020,
	title = {Fixed-Point Arithmetic: An Introduction},
	url = {http://www.digitalsignallabs.com/fp.pdf},
	abstract = {This document presents definitions of signed and unsigned fixed-point binary number representations and devel-
ops basic rules and guidelines for the manipulation of these number representations using the common arithmetic
and logical operations found in fixed-point {DSPs} and hardware components.},
	publisher = {Digital Signal Labs},
	author = {Yates, Randy},
	urldate = {2024-07-07},
	date = {2020-09-15},
	langid = {english},
	file = {Yates - Fixed-Point Arithmetic An Introduction.pdf:/home/sicabi/Zotero/storage/5F5U4NE5/Yates - Fixed-Point Arithmetic An Introduction.pdf:application/pdf},
}

@book{tanenbaum_structured_2013,
	location = {Nueva Jersey},
	edition = {6},
	title = {Structured Computer Organization},
	isbn = {978-0-13-291652-3},
	url = {https://www.pearson.com/store/en-us/pearsonplus/p/9780137618446.html},
	shorttitle = {Structured Computer Organizations},
	pagetotal = {776},
	publisher = {Pearson},
	author = {Tanenbaum, Andrew  S. and Austin, Todd},
	urldate = {2024-04-07},
	date = {2013},
	langid = {english},
}

@misc{new_generation_arithmetic_standard_2020,
	location = {Singapur},
	title = {Standard for Posit Arithmetic (2022)},
	url = {https://posithub.org/},
	shorttitle = {Posit Standard (2022)},
	abstract = {This standard specifies the storage format, operation behavior, and required mathematical functions for posit
arithmetic. It describes the binary storage used by the computer and the human-readable character input and
output for posit representation. A system that meets this standard is said to be posit compliant and will produce results that are identical to those produced by any other posit compliant system. A posit compliant system may be realized using software or hardware or any combination.},
	pagetotal = {12},
	publisher = {New Generation Arithmetic},
	author = {{New Generation Arithmetic}},
	urldate = {2024-01-03},
	date = {2020-03},
	langid = {english},
}

@book{abelson_structure_1996,
	location = {Cambrige, {MA}},
	edition = {2a},
	title = {Structure and Interpretation of Computer Programs, foreword by Alan J. Perlis},
	isbn = {{ISBN} 0-262-01153-0},
	url = {https://mitpress.mit.edu/9780262510875/structure-and-interpretation-of-computer-programs/},
	series = {Electrical Engineering and Computer Science Department at the Massachusetts Institute of Technology},
	shorttitle = {Structure and Interpretation of Computer Programs},
	abstract = {Structure and Interpretation of Computer Programs has had a dramatic impact on computer science curricula over the past decade. This long-awaited revision co...},
	pagetotal = {657},
	publisher = {The {MIT} Press/{McGraw}-Hill},
	author = {Abelson, Harold and Sussman, Gerald Jay and Sussman, Julie},
	urldate = {2024-05-31},
	date = {1996},
	langid = {american},
	file = {Snapshot:/home/sicabi/Zotero/storage/9BB58J3H/structure-and-interpretation-of-computer-programs.html:text/html},
}

@incollection{little_problem_2020,
	location = {Hoboken, {NJ}},
	edition = {3ra},
	title = {The problem of missing data},
	isbn = {978-1-118-59601-2},
	series = {Wiley Series in Probability and Statistics},
	pages = {449},
	booktitle = {Statistical Analysis with Missing Data},
	publisher = {John Wiley and Sons},
	author = {Little, Roderick J. A. and Rubin, Donald B.},
	date = {2020},
	langid = {english},
}

@misc{isoiec_international_2020,
	location = {Ginebra},
	title = {International Standard. Floating Point Arithmetic},
	url = {https://www.iso.org/standard/80985.html},
	shorttitle = {{ISO}/{IEC} 60559:2020},
	abstract = {This standard specifies interchange and arithmetic formats and methods for binary and decimal floating-point arithmetic in computer programming environments. This standard specifies exception conditions and their default handling. An implementation of a floating-point system
conforming to this standard may be realized entirely in software, entirely in hardware, or in any combination of software and hardware. For operations specified in the normative part of this standard, numerical results and exceptions are uniquely determined by the values of the input data, sequence of operations, and destination formats, all under user control.},
	version = {2},
	pagetotal = {84},
	number = {60559:2020-05},
	publisher = {International Organization for Standardization},
	author = {{ISO/IEC}},
	urldate = {2024-05-27},
	date = {2020-05},
	langid = {english},
	note = {{ISBN} 978-2-8322-8178-9},
	file = {Snapshot:/home/sicabi/Zotero/storage/QHJ2ZMUB/80985.html:text/html},
}

@book{wirth_algorithms_1976,
	location = {Eaglewood Cliffs, {NJ}},
	title = {Algorithms + Data Structures = Programs},
	pagetotal = {366},
	publisher = {Prentice Hall},
	author = {Wirth, Niklaus},
	date = {1976},
	langid = {american},
}

@inreference{djao_24_real_2013,
	location = {Waterloo, Canada},
	title = {real number},
	url = {https://planetmath.org/realnumber},
	booktitle = {{PlanetMath}},
	publisher = {University of Waterloo Faculty of Mathematics},
	author = {{djao (24)}},
	urldate = {2024-05-06},
	date = {2013-03-22},
	file = {real number:/home/sicabi/Zotero/storage/DWZTSW2N/realnumber.html:text/html},
}

@book{r_development_core_team_r_2024,
	location = {Viena},
	title = {R Language Definition},
	url = {https://cran.r-project.org/doc/manuals/r-release/R-lang.pdf},
	series = {The R Manuals},
	pagetotal = {55},
	publisher = {The R Foundation for Statistical Computing},
	author = {{R Development Core Team}},
	urldate = {2024-04-21},
	date = {2024-02-24},
	langid = {american},
}

@misc{geisler_cult_2019,
	title = {The Cult of Posits},
	url = {https://www.cs.cornell.edu/courses/cs6120/2019fa/blog/posits/},
	author = {Geisler, Dietrich and Peguero, Edwin},
	date = {2019-12-03},
}

@misc{borgwardt_floating-point_2010,
	title = {The Floating-Point Guide - Floating Point Numbers},
	url = {https://floating-point-gui.de/formats/fp/},
	author = {Borgwardt, Michael},
	date = {2010-04-10},
}

@book{muller_handbook_2018,
	location = {Boston},
	title = {Handbook of Floating-Point Arithmetic},
	url = {Âº},
	publisher = {BirkhÃ¤user},
	author = {Muller, Jean-Michel and Brunie, Nicolas and De Dinechin, Florent and Jeannerod, Claude-Pierre and Joldes, Mioara and LefÃ¨vre, Vincent and Melquiond, Guillaume and Revol, Nathalie and Torres, Serge},
	date = {2018},
	doi = {10.1007/978-3-319-76526-6},
	annotation = {{DOI}: 10.1007/978-3-319-76526-6},
}

@misc{noauthor_decimal_2023,
	title = {Decimal separator},
	url = {https://en.wikipedia.org/w/index.php?title=Decimal_separator&oldid=1161958209},
	date = {2023-06-26},
	annotation = {Page Version {ID}: 1161958209},
}

@book{evans_how_2023,
	location = {Montreal},
	title = {How Integers and Floats Work. The weird truth about how your computer does math},
	url = {https://wizardzines.com/zines/integers-floats/},
	series = {Wizard Zines},
	publisher = {wizardzines.com},
	author = {Evans, Julia},
	date = {2023-06-16},
}

@article{goldberg_what_1991,
	title = {What every computer scientist should know about floating-point arithmetic},
	volume = {23},
	url = {https://dl.acm.org/doi/10.1145/103162.103163},
	doi = {10.1145/103162.103163},
	pages = {5--48},
	number = {1},
	journaltitle = {{ACM} Computing Surveys},
	author = {Goldberg, David},
	date = {1991-03},
}

@online{regan_decimal_2016,
	title = {Decimal Precision of Binary Floating-Point Numbers - Exploring Binary},
	url = {https://www.exploringbinary.com/decimal-precision-of-binary-floating-point-numbers/},
	author = {Regan, Rick},
	urldate = {2024-04-17},
	date = {2016-06-09},
	langid = {american},
	file = {Snapshot:/home/sicabi/Zotero/storage/FCLDLPNB/decimal-precision-of-binary-floating-point-numbers.html:text/html},
}

@article{hough_ieee_2019,
	title = {The {IEEE} Standard 754: One for the History Books},
	volume = {52},
	issn = {1558-0814},
	url = {https://ieeexplore.ieee.org/document/8909942},
	doi = {10.1109/MC.2019.2926614},
	shorttitle = {The {IEEE} Standard 754},
	abstract = {Reports on {IEEE} Standard 754, the Standard for Floating Point Arithmetic, had its beginnings more than 40 years ago. Implementations of the standard have flourished in many commercial microprocessors and other computer platforms. In June, a revision of the standard was approved by the {IEEE} Standards Association Standards Board. This column recounts some of the interesting history behind the standard.},
	pages = {109--112},
	number = {12},
	journaltitle = {Computer},
	author = {Hough, David G.},
	urldate = {2025-04-29},
	date = {2019-12},
	keywords = {Floating-point arithmetic, {IEEE} Standards, Microprocessors},
	file = {Snapshot:/home/sicabi/Zotero/storage/BU7CVWZ4/8909942.html:text/html},
}

@book{oracle_oracle_2017,
	location = {Redwood Shores, California},
	title = {Oracle Developer Studio 12.6: Numerical Computation Guide},
	url = {https://docs.oracle.com/cd/E77782_01/pdf/E77791.pdf},
	series = {Oracle Developer Studio 12.6 Documentation Library},
	publisher = {Sun Microsystems},
	author = {{Oracle}},
	urldate = {2025-04-30},
	date = {2017-07},
	langid = {english},
	file = {Contents:/home/sicabi/Zotero/storage/EQWQZFT3/ncgTOC.html:text/html},
}

@book{becker_new_1988,
	location = {Pacific Grove, California},
	title = {The New S language: A Programming Environment for Data Analysis and Graphics},
	isbn = {978-0-534-09192-7 978-0-534-09193-4},
	url = {http://archive.org/details/newslanguageprog0000beck},
	series = {Computer Science Series},
	shorttitle = {The New S Language},
	abstract = {xvii, 702 pages : 24 cm; Includes bibliographical references (pages 365-366) and index},
	pagetotal = {726},
	publisher = {Wadsworth \& Brooks/Cole Advanced Books \& Software},
	author = {Becker, Richard A. and Chambers, John M. and Wilks, Allan R.},
	urldate = {2025-05-03},
	date = {1988},
	langid = {english},
	keywords = {S (Computer program language)},
}

@article{hough_ieee_2019-1,
	title = {The {IEEE} Standard 754: One for the History Books},
	volume = {52},
	issn = {1558-0814},
	url = {https://ieeexplore.ieee.org/document/8909942},
	doi = {10.1109/MC.2019.2926614},
	shorttitle = {The {IEEE} Standard 754},
	abstract = {Reports on {IEEE} Standard 754, the Standard for Floating Point Arithmetic, had its beginnings more than 40 years ago. Implementations of the standard have flourished in many commercial microprocessors and other computer platforms. In June, a revision of the standard was approved by the {IEEE} Standards Association Standards Board. This column recounts some of the interesting history behind the standard.},
	pages = {109--112},
	number = {12},
	journaltitle = {Computer},
	author = {Hough, David G.},
	urldate = {2025-05-08},
	date = {2019-12},
	keywords = {Floating-point arithmetic, {IEEE} Standards, Microprocessors},
	file = {Snapshot:/home/sicabi/Zotero/storage/EFBL2IJ5/8909942.html:text/html},
}

@book{brent_modern_2010,
	location = {Cambridge},
	title = {Modern Computer Arithmetic},
	isbn = {978-0-521-19469-3},
	url = {https://www.cambridge.org/core/books/modern-computer-arithmetic/B345DF9E08B232BC5BAFE05C2F3A36D8},
	series = {Cambridge Monographs on Applied and Computational Mathematics},
	abstract = {Modern Computer Arithmetic focuses on arbitrary-precision algorithms for efficiently performing arithmetic operations such as addition, multiplication and division, and their connections to topics such as modular arithmetic, greatest common divisors, the Fast Fourier Transform ({FFT}), and the computation of elementary and special functions. Brent and Zimmermann present algorithms that are ready to implement in your favourite language, while keeping a high-level description and avoiding too low-level or machine-dependent details. The book is intended for anyone interested in the design and implementation of efficient high-precision algorithms for computer arithmetic, and more generally efficient multiple-precision numerical algorithms. It may also be used in a graduate course in mathematics or computer science, for which exercises are included. These vary considerably in difficulty, from easy to small research projects, and expand on topics discussed in the text.  Solutions to selected exercises are available from the authors.},
	publisher = {Cambridge University Press},
	author = {Brent, Richard P. and Zimmermann, Paul},
	urldate = {2025-06-03},
	date = {2010},
	doi = {10.1017/CBO9780511921698},
	file = {Snapshot:/home/sicabi/Zotero/storage/6S7NTGL2/B345DF9E08B232BC5BAFE05C2F3A36D8.html:text/html;Submitted Version:/home/sicabi/Zotero/storage/KEGF6AKQ/Brent and Zimmermann - 2010 - Modern Computer Arithmetic.pdf:application/pdf},
}

@online{ieee_milestonesieee_2024,
	title = {Milestones:{IEEE} Standard 754 for Binary Floating-Point Arithmetic, 1985},
	rights = {{IEEE}},
	url = {https://ethw.org/w/index.php?title=Milestones:IEEE_Standard_754_for_Binary_Floating-Point_Arithmetic,_1985&oldid=202712},
	shorttitle = {Milestones},
	titleaddon = {Engineering and Technology History Wiki},
	author = {{IEEE}},
	urldate = {2025-06-05},
	date = {2024-10-04},
	langid = {english},
	file = {Snapshot:/home/sicabi/Zotero/storage/GT8UIQJY/MilestonesIEEE_Standard_754_for_Binary_Floating-Point_Arithmetic,_1985.html:text/html},
}

@misc{ieee_ieee_2019,
	location = {Nueva York},
	title = {{IEEE} Std 754-2019. {IEEE} Standard for Floating-Point Arithmetic},
	rights = {{IEEE}},
	url = {https://standards.ieee.org/ieee/754/6210/},
	shorttitle = {{IEEE} Std 754-2019.},
	version = {1},
	pagetotal = {83},
	number = {754-2019},
	publisher = {The Institute of Electrical and Electronics Engineers, Inc},
	author = {{IEEE}},
	urldate = {2025-06-06},
	date = {2019-07-22},
	langid = {american},
}
